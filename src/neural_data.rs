
/*

    Data for unit tests

    Please note use of & and const; this means 
    that the data itself is stored as a static variable
    directly in the binary code, but the reference is not static.
    It is however copied into the the code a compile time 
    every place it is used, as a const would be.
    So a pub const & is a kind of static variable.  
*/

#![allow(dead_code)]

pub const A_INPUT: &[i8] = &[
        0, 0, 1, 1, 0, 0, 
        0, 1, 0, 0, 1, 0,
        1, 1, 1, 1, 1, 1,
        1, 0, 0, 0, 0, 1,
        1, 0, 0, 0, 0, 1];

pub const A_OUTPUT: &[i8] = &[1, 0, 0];

pub const W1: &[&[f64]] = &[
&[1.4471, 0.1089, -0.5946, -0.3561, 1.0164, ],
&[0.5838, -1.2973, 1.6353, -0.1877, 0.5103, ],
&[-1.2306, 0.4537, 1.0708, 0.1518, 1.2684, ],
&[0.1237, -0.5785, -1.7884, -0.2588, -0.6410, ],
&[-1.0211, -1.3709, 0.7936, 0.9652, -0.2878, ],
&[0.8478, -1.2553, 0.2006, 0.4499, -1.1906, ],
&[0.0827, -0.5795, 0.1719, 0.3833, -0.4288, ],
&[-2.1429, -1.0544, 0.6255, -1.4042, 0.8119, ],
&[-0.6639, 0.2168, -0.2936, 0.4671, -0.5450, ],
&[-0.4883, -1.8399, 0.3830, -0.0212, 0.4271, ],
&[-1.4657, -0.2928, 0.6402, -1.1579, -0.0011, ],
&[-1.1446, 0.8951, -0.1629, -0.7682, 0.1953, ],
&[0.6887, -1.9751, 1.5203, -0.2719, 0.8371, ],
&[0.1387, 1.2568, -0.6627, 1.1723, 0.9085, ],
&[1.0519, 1.1263, -0.0725, -0.6333, -0.3687, ],
&[-0.4809, 0.8442, 0.9741, 0.2137, 1.3483, ],
&[-1.7420, -0.7416, -2.0159, 0.9898, 0.3306, ],
&[0.1751, 0.0914, 1.1623, 0.2881, 0.9999, ],
&[-0.9684, 1.2646, 2.0343, -0.3893, -0.9428, ],
&[1.1459, -0.3759, -0.5263, 2.0122, -0.0444, ],
&[0.3927, 0.5850, 0.0133, 0.4251, -1.8981, ],
&[0.2149, 0.8153, -1.6888, -1.8467, 1.3774, ],
&[1.1435, -1.0680, -0.0641, -0.0158, -0.4220, ],
&[-0.1595, 2.3061, 0.4820, -0.2577, 0.9876, ],
&[-0.7439, -1.2024, 0.2779, 0.3329, -0.3280, ],
&[0.8070, -1.1932, 0.4826, 0.2255, 1.0646, ],
&[-1.6431, 0.3742, -0.1012, -0.5729, 0.0929, ],
&[-0.2836, 1.4755, 0.5522, 0.8231, -0.3942, ],
&[-0.0134, -0.5584, -0.9693, 0.1610, -0.5538, ],
&[-0.5000, -1.2743, 0.5932, 0.0118, -2.5724, ],
];

pub const W2: &[[f64; 3]; 5] = &[
[1.1697, 1.5113, -1.7761 ],
[-0.8300, 0.0493, -2.2701 ],
[0.3861, -2.4398, 1.2420 ],
[-0.6741, 0.1552, 0.4458 ],
[-0.9879, -0.8454, -0.7712 ]
];

pub const W1_BACK_PROP_1: &[&[f64]] = &[
&[1.4471, 0.1089, -0.5946, -0.3561, 1.0164],
&[0.5838, -1.2973, 1.6353, -0.1877, 0.5103],
&[-1.2305, 0.4573, 1.0708, 0.1399, 1.2656],
&[0.1238, -0.5749, -1.7884, -0.2707, -0.6438],
&[-1.0211, -1.3709, 0.7936, 0.9652, -0.2878],
&[0.8478, -1.2553, 0.2006, 0.4499, -1.1906],
&[0.0827, -0.5795, 0.1719, 0.3833, -0.4288],
&[-2.1428, -1.0508, 0.6255, -1.4161, 0.8091],
&[-0.6639, 0.2168, -0.2936, 0.4671, -0.5450],
&[-0.4883, -1.8399, 0.3830, -0.0212, 0.4271],
&[-1.4656, -0.2892, 0.6402, -1.1698, -0.0039],
&[-1.1446, 0.8951, -0.1629, -0.7682, 0.1953],
&[0.6888, -1.9715, 1.5203, -0.2838, 0.8343],
&[0.1388, 1.2604, -0.6627, 1.1604, 0.9057],
&[1.0520, 1.1299, -0.0725, -0.6452, -0.3715],
&[-0.4808, 0.8478, 0.9741, 0.2018, 1.3455],
&[-1.7419, -0.7380, -2.0159, 0.9779, 0.3278],
&[0.1752, 0.0950, 1.1623, 0.2762, 0.9971],
&[-0.9683, 1.2682, 2.0343, -0.4012, -0.9456],
&[1.1459, -0.3759, -0.5263, 2.0122, -0.0444],
&[0.3927, 0.5850, 0.0133, 0.4251, -1.8981],
&[0.2149, 0.8153, -1.6888, -1.8467, 1.3774],
&[1.1435, -1.0680, -0.0641, -0.0158, -0.4220],
&[-0.1594, 2.3097, 0.4820, -0.2696, 0.9848],
&[-0.7438, -1.1988, 0.2779, 0.3210, -0.3308],
&[0.8070, -1.1932, 0.4826, 0.2255, 1.0646],
&[-1.6431, 0.3742, -0.1012, -0.5729, 0.0929],
&[-0.2836, 1.4755, 0.5522, 0.8231, -0.3942],
&[-0.0134, -0.5584, -0.9693, 0.1610, -0.5538],
&[-0.4999, -1.2707, 0.5932, -0.0001, -2.5752]
];

pub const W2_BACK_PROP_1: &[&[f64]] = &[
&[1.1698, 1.5113, -1.7761],
&[-0.7877, 0.0470, -2.2892],
&[0.4615, -2.4439, 1.2079],
&[-0.6567, 0.1543, 0.4379],
&[-0.9169, -0.8493, -0.8032]
];


